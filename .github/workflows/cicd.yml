name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            export GITHUB_REPOSITORY=${{ github.repository }}
            sudo sysctl vm.overcommit_memory=1
            # Use a user-specific directory for deployment
            DEPLOY_DIR=/home/${{ secrets.EC2_USER }}/design

            # Use GITHUB_REPOSITORY for the repository URL
            REPO_URL="https://github.com/${GITHUB_REPOSITORY}.git"

            # If the repo does not exist, clone it; otherwise, pull latest
            if [ ! -d "$DEPLOY_DIR/.git" ]; then
              git clone "$REPO_URL" "$DEPLOY_DIR"
            else
              cd "$DEPLOY_DIR"
              git pull origin main
            fi
            cd "$DEPLOY_DIR"
            docker compose down
            docker compose build
            docker image prune -f
            docker compose up -d
